<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hg.msg.mapper.MsgUserNotifyMapper">
    <resultMap id="BaseResultMap" type="com.hg.msg.entity.MsgUserNotify">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="is_read" property="isRead" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="notify_id" property="notifyId" jdbcType="BIGINT"/>
        <result column="notify_type" property="notifyType" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="notify_time" property="notifyTime" jdbcType="TIMESTAMP"/>


        <result column="del_status" property="delStatus" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, is_read, user_id, notify_id, notify_type, create_time, update_time, del_status,notify_time
    </sql>

    <!-- 查询用户新的notify -->
    <select id="selectUserNewNotify" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from msg_user_notify
        where
        user_id = #{userId} and create_time &gt; #{createTime} and notify_type = #{notifyType}
    </select>

    <!-- 查询最新的一条notify -->
    <select id="selectLatestNotify" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from msg_user_notify
        where
        user_id = #{userId} and notify_type = #{notifyType}
        order by create_time desc
        limit 0,1
    </select>


    <select id="selectByUid" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from msg_user_notify
        where
        user_id = #{userId}
        order by create_time desc
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from msg_user_notify
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from msg_user_notify
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.hg.msg.entity.MsgUserNotify">
        insert into msg_user_notify (id, is_read, user_id,
        notify_id, notify_type, create_time,
        update_time, del_status)
        values (#{id,jdbcType=BIGINT}, #{isRead,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT},
        #{notifyId,jdbcType=BIGINT}, #{notifyType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{delStatus,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.hg.msg.entity.MsgUserNotify">
        insert into msg_user_notify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="isRead != null">
                is_read,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="notifyId != null">
                notify_id,
            </if>
            <if test="notifyType != null">
                notify_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="notifyTime != null">
                notify_time,
            </if>

            <if test="delStatus != null">
                del_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="isRead != null">
                #{isRead,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="notifyId != null">
                #{notifyId,jdbcType=BIGINT},
            </if>
            <if test="notifyType != null">
                #{notifyType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="notifyTime != null">
                #{notifyTime,jdbcType=TIMESTAMP},
            </if>


            <if test="delStatus != null">
                #{delStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hg.msg.entity.MsgUserNotify">
        update msg_user_notify
        <set>
            <if test="isRead != null">
                is_read = #{isRead,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="notifyId != null">
                notify_id = #{notifyId,jdbcType=BIGINT},
            </if>
            <if test="notifyType != null">
                notify_type = #{notifyType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                del_status = #{delStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hg.msg.entity.MsgUserNotify">
        update msg_user_notify
        set is_read = #{isRead,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=BIGINT},
        notify_id = #{notifyId,jdbcType=BIGINT},
        notify_type = #{notifyType,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        del_status = #{delStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>