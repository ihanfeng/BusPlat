<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhiyin.dbs.module.address.mapper.SegLocCenterMapper" >
  <resultMap id="BaseResultMap" type="com.zhiyin.dbs.module.address.entity.SegLocCenter" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="addr_loc_id" property="addrLocId" jdbcType="BIGINT" />
    <result column="center_lon" property="centerLon" jdbcType="DOUBLE" />
    <result column="center_lat" property="centerLat" jdbcType="DOUBLE" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_status" property="delStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, addr_loc_id, center_lon, center_lat, create_user_id, update_user_id, create_time, 
    update_time, del_status
  </sql>



  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from zhiyin_addr_seg_loc_center
    where id = #{id,jdbcType=BIGINT}
    and del_status = 0
  </select>

  <insert id ="insertBatch" parameterType="java.util.List" >
    insert into zhiyin_addr_seg_loc_center (id, addr_loc_id, center_lon,
    center_lat, create_user_id, update_user_id,
    create_time, update_time, del_status
    )
    values
    <foreach collection ="list" item="tmp" index= "index" separator =",">
      (#{tmp.id,jdbcType=BIGINT}, #{tmp.addrLocId,jdbcType=BIGINT}, #{tmp.centerLon,jdbcType=REAL},
      #{tmp.centerLat,jdbcType=REAL}, #{tmp.createUserId,jdbcType=BIGINT}, #{tmp.updateUserId,jdbcType=BIGINT},
      #{tmp.createTime,jdbcType=TIMESTAMP}, #{tmp.updateTime,jdbcType=TIMESTAMP}, #{tmp.delStatus,jdbcType=INTEGER}
      )
    </foreach >
  </insert >

  <update id="deleteByAddrLoc" parameterType="java.lang.Long" >
    update zhiyin_addr_seg_loc_center
    set del_status = 1
    where addr_loc_id = #{addrLocId}
  </update>





  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from zhiyin_addr_seg_loc_center
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhiyin.dbs.module.address.entity.SegLocCenter" >
    insert into zhiyin_addr_seg_loc_center (id, addr_loc_id, center_lon, 
      center_lat, create_user_id, update_user_id, 
      create_time, update_time, del_status
      )
    values (#{id,jdbcType=BIGINT}, #{addrLocId,jdbcType=BIGINT}, #{centerLon,jdbcType=DOUBLE}, 
      #{centerLat,jdbcType=DOUBLE}, #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{delStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhiyin.dbs.module.address.entity.SegLocCenter" >
    insert into zhiyin_addr_seg_loc_center
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="addrLocId != null" >
        addr_loc_id,
      </if>
      <if test="centerLon != null" >
        center_lon,
      </if>
      <if test="centerLat != null" >
        center_lat,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delStatus != null" >
        del_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addrLocId != null" >
        #{addrLocId,jdbcType=BIGINT},
      </if>
      <if test="centerLon != null" >
        #{centerLon,jdbcType=DOUBLE},
      </if>
      <if test="centerLat != null" >
        #{centerLat,jdbcType=DOUBLE},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delStatus != null" >
        #{delStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhiyin.dbs.module.address.entity.SegLocCenter" >
    update zhiyin_addr_seg_loc_center
    <set >
      <if test="addrLocId != null" >
        addr_loc_id = #{addrLocId,jdbcType=BIGINT},
      </if>
      <if test="centerLon != null" >
        center_lon = #{centerLon,jdbcType=DOUBLE},
      </if>
      <if test="centerLat != null" >
        center_lat = #{centerLat,jdbcType=DOUBLE},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delStatus != null" >
        del_status = #{delStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhiyin.dbs.module.address.entity.SegLocCenter" >
    update zhiyin_addr_seg_loc_center
    set addr_loc_id = #{addrLocId,jdbcType=BIGINT},
      center_lon = #{centerLon,jdbcType=DOUBLE},
      center_lat = #{centerLat,jdbcType=DOUBLE},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_status = #{delStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>